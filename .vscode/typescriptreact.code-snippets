{
  "importReact": {
    "prefix": ["imr"],
    "body": ["import { $1 } from 'react'$0"]
  },
  "importReactComponent": {
    "prefix": ["imrc"],
    "body": ["import { $1, Component } from 'react'$0"]
  },
  "importReactState": {
    "prefix": ["imrs"],
    "body": ["import { $1, useState } from 'react'$0"]
  },
  "importReactEffect": {
    "prefix": ["imre"],
    "body": ["import { $1, useEffect } from 'react'$0"]
  },
  "importReactStateEffect": {
    "prefix": ["imrse"],
    "body": ["import { $1, useEffect, useState } from 'react'$0"]
  },
  "useState": {
    "prefix": ["usf", "usestate"],
    "body": [
      "const [${1}, set${1/(^[a-zA-Z])(.*)/${1:/upcase}${2}/}] = useState(${2:initialState})$0"
    ]
  },
  "useStateProps": {
    "prefix": ["uspf", "usestateprops"],
    "body": [
      "const [${1}, set${1/(^[a-zA-Z])(.*)/${1:/upcase}${2}/}] = useState<${3:Props}>(${2:initialState})$0"
    ]
  },
  "useEffect": {
    "prefix": ["uef", "useeffect"],
    "body": ["useEffect(() => {", "  $2", "}, [${1:deps}])$0"]
  },
  "useReducer": {
    "prefix": ["urf", "usereducer"],
    "body": ["const [state, dispatch] = useReducer(${1:reducer}, ${2:initialState})$0"]
  },
  "useRef": {
    "prefix": ["uref", "useref"],
    "body": ["const ${1:ref} = useRef($2)$0"]
  },
  "useCallback": {
    "prefix": ["ucf", "usecallback"],
    "body": ["const ${1:callback} = useCallback(() => {", " $3", "}, [${2:deps}])$0"]
  },
  "useMemo": {
    "prefix": ["umf", "umemo", "usememo"],
    "body": ["const ${1:value} = useMemo(() => $3, [${2:deps}])$0"]
  },
  "classComponentRender": {
    "prefix": ["ccr"],
    "body": [
      "class $1 extends Component {",
      "  render() {",
      "    return ($2)",
      "  }",
      "}",
      "",
      "export default $1",
      "$0"
    ]
  },
  "classComponentRenderConstructor": {
    "prefix": ["ccc"],
    "body": [
      "class $1 extends Component {",
      "  constructor(props) {",
      "    super(props)",
      "    this.state = { $2 }",
      "  }",
      "  render() {",
      "    return ($3)",
      "  }",
      "}",
      "",
      "export default $1",
      "$0"
    ]
  },
  "statelessFunctionalComponent": {
    "prefix": ["sfc"],
    "body": [
      "const ${1:Component}: FC = (${2:props}) => {",
      "",
      "  $4",
      "",
      "  return ($3)",
      "}",
      "",
      "export default ${1:Component}",
      "$0"
    ]
  },
  "FunctionalComponentProps": {
    "prefix": ["fcp"],
    "body": [
      "import { FC, Children } from 'react'",
      "",
      "type ${1:Component}Props = {",
      "  children?: typeof Children",
      "}",
      "",
      "const ${1:Component}: FC<${1:Component}Props> = ({ children }): JSX.Element => {",
      "",
      "  $2",
      "",
      "  return (",
      "    <>",
      "      {children}",
      "    </>",
      "  )",
      "}",
      "",
      "export { ${1:Component} }",
      "$0"
    ]
  },
  "statelessFunctionalComponentProps": {
    "prefix": ["sfcp"],
    "body": [
      "const ${1:Component}: FC<${2:Props}> = (${3:props}) => {",
      "",
      "  $5",
      "",
      "  return ($4)",
      "}",
      "",
      "export default ${1:Component}",
      "$0"
    ]
  }
}
